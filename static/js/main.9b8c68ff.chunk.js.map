{"version":3,"sources":["components/layout/QuestionHeader.js","components/pages/Exercicio1Page.js","components/pages/Exercicio2Page.js","components/pages/Exercicio3Page.js","components/pages/Exercicio4Page.js","components/pages/Exercicio5Page.js","components/pages/Exercicio6Page.js","components/pages/Exercicio7Page.js","components/pages/Exercicio8Page.js","components/pages/Exercicio9Page.js","components/pages/Exercicio10Page.js","consts.js","components/layout/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["QuestionHeader","_ref","title","description","QuestionHead","styled","div","_templateObject","react_default","a","createElement","Exercicio1Page","react","layout_QuestionHeader","default_highlight","language","Exercicio2Page","state","users","shuffle","temporaryValue","randomIndex","_this","currentIndex","length","Math","floor","random","setState","this","onClick","map","d","i","key","Component","Exercicio3Page","_useState","useState","_useState2","Object","slicedToArray","array1","setArray1","_useState3","_useState4","array2","setArray2","Flex","Exercicio3Page_templateObject","Card","_templateObject2","Button","button","_templateObject3","array","concat","toConsumableArray","Exercicio4Page","CardDeck","Exercicio4Page_templateObject","Exercicio4Page_templateObject2","CardBody","Exercicio4Page_templateObject3","Avatar","Exercicio5Page","Grid","Exercicio5Page_templateObject","Aside","aside","Exercicio5Page_templateObject2","Main","main","Exercicio5Page_templateObject3","Article","article","_templateObject4","Exercicio6Page","Exercicio7Page","Exercicio8Page","Exercicio9Page","Exercicio10Page","navbarItems","id","label","link","Navbar","Navigation","nav","Navbar_templateObject","NavigationList","ul","Navbar_templateObject2","NavigationItem","li","Navbar_templateObject3","navbarItem","react_router_dom","to","App","GlobalStyles","createGlobalStyle","App_templateObject","layout_Navbar","Container","fixed","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b8c68ff.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components';\n\nconst QuestionHeader = ({ title, description }) => {\n  const QuestionHead = styled.div`\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n    background: #f5f5f5;\n    padding: 1rem;\n    h1 {\n      margin-top: 0;\n    }\n  `\n\n  return (\n    <QuestionHead>\n      <h1>{title}</h1>\n      <p>{description}</p>\n    </QuestionHead>\n  )\n}\n\nexport default QuestionHeader\n","import React, { Fragment } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport QuestionHeader from '../layout/QuestionHeader';\n\nconst Exercicio1Page = () => {\n  const code1 = 'getUser = () =>  {}'\n  const code2 = (\n    'singUps(data) = async () => { const res = axios.post(`https://api.testes.com/signup`) return res }'\n  )\n\n  return (\n    <Fragment>\n      <QuestionHeader\n        title=\"Exercicio 1\"\n        description=\"Analise o código abaixo, verifique se há problema(s). Caso haja, aponte-o(s) e justifique:\"\n      />\n      <article>\n        <p>primeiro erro: faltou a arrow function no chamado da função getUser.</p>\n        <SyntaxHighlighter language=\"javascript\">\n          {code1}\n        </SyntaxHighlighter>\n        <p>segundo erro: a função async está com a sintax errada.</p>\n        <SyntaxHighlighter language=\"javascript\">\n          {code2}\n        </SyntaxHighlighter>\n      </article>\n    </Fragment>\n  );\n}\n\nexport default Exercicio1Page;\n","import React, { Fragment, Component } from 'react';\nimport QuestionHeader from '../layout/QuestionHeader';\n\nclass Exercicio2Page extends Component {\n  state = {\n    users: [\n      'Matheus',\n      'João',\n      'Carlos',\n      'Luiz',\n      'Roberto',\n    ]\n  }\n\n   shuffle = () => {\n    const { users } = this.state;\n    var currentIndex = users.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = users[currentIndex];\n      users[currentIndex] = users[randomIndex];\n      users[randomIndex] = temporaryValue;\n    }\n    this.setState({ users });\n  }\n\n  render() {\n    const { users } = this.state;\n    return (\n      <Fragment>\n        <QuestionHeader\n          title=\"Exercicio 2\"\n          description=\"\n          Ao desenvolver com React/React-Native,\n          nos deparamos com um conceito de controle de\n          componentes na interface diferente do que somos\n          acostumados com o Angular por exemplo.\n          O conceito de estados da interface,\n          imutável e trazido dos conceitos da programação funcional.\n          Sempre que o estado muda,\n          o React reconstrói/renderiza a tela novamente com o novo estado.\n          Baseado nessas informações,\n          construa uma lista com os dados fornecidos,\n          que randomize os dados a cada vez que clicar no botão indicado.\"\n        />\n        <div>\n          <button onClick={this.shuffle}>Random</button>\n          <h1>Lista de usuários: </h1>\n          {\n            users.map((d, i) => (\n              <p key={i}>{d}</p>\n            ))\n          }\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Exercicio2Page;\n","import React, { Fragment, useState } from 'react';\nimport styled from 'styled-components';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport QuestionHeader from '../layout/QuestionHeader';\n\nconst Exercicio3Page = () => {\n  const initialStateArray1 = [\n    1, 2, 3, 4\n  ];\n\n  const initialStateArray2 = [\n    'a', 'b', 'c', 'd'\n  ]\n\n  const [array1, setArray1] = useState(initialStateArray1)\n  const [array2, setArray2] = useState(initialStateArray2)\n\n  const handleArray1 = () => {\n    setArray1([0, ...array1])\n  }\n  const handleArray2 = () => {\n    setArray2([...array2, 'e'])\n  }\n\n  const Flex = styled.div`\n    display: flex;\n    margin-top: 2rem;\n    justify-content: space-around;\n    align-items: center;\n  `\n\n  const Card = styled.div`\n    flex: 0 1 calc(33% - 1rem);\n    border: 1px solid #eee;\n    padding: 0.5rem 2rem 1rem 2rem;\n\n    @media(max-width: 768px) {\n      flex: 0 1 calc(50% - 1rem);\n    }\n    @media(max-width: 480px) {\n      flex: 0 1 100%;\n    }\n  `\n\n  const Button = styled.button`\n    margin-top: 1rem;\n    float: right;\n    padding: 10px;\n    color: white;\n    background: #1976d2;\n  `\n\n\n  return (\n    <Fragment>\n      <QuestionHeader\n        title=\"Exercicio 3\"\n        description=\"Com o crescimento das tecnologias Front-End o Javascript a\n        linguagem mais utilizada entre todas, também não ficou para trás, o\n        ES5 e ES6 vieram com várias funcionalidades novas, dentre elas o\n        *spread operator*. Com base em seus conhecimentos sobre\n        Javascript, construa em HTML/CSS e JS uma página capaz de\n        imprimir dois arrays que quando clicar em um botão, seja iterado no\n        array um elemento. No primeiro array este elemento deve ser iterado\n        no início do array, já o segundo array deve ser iterado no fim.\n        Requisitos: É obrigatório o uso do spread operator.\"\n      />\n      <Flex>  \n        <Card>\n          <Flex>\n            {array1.map(array => (\n              <div>{array}</div>\n            ))}\n          </Flex>\n          <Button onClick={() => handleArray1()}>Adicionar número no inicio da lista</Button>\n        </Card>\n        <Card>\n          <Flex>\n            {array2.map(array => (\n              <div>{array}</div>\n            ))}\n          </Flex>\n          <Button onClick={() => handleArray2()}>Adicionar string no final da lista</Button>\n        </Card>\n      </Flex>\n      <SyntaxHighlighter>\n{`\nconst handleArray1 = () => {\n  setArray1([0, ...array1])\n}\nconst handleArray2 = () => {\n  setArray2([...array2, 'e'])\n}\n`}\n      </SyntaxHighlighter>\n    </Fragment>\n  );\n}\n\nexport default Exercicio3Page;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { Avatar } from '@material-ui/core';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport QuestionHeader from '../layout/QuestionHeader';\n\nconst Exercicio4Page = () => {\n  const CardDeck = styled.div`\n    display: flex;\n    margin-top: 4rem;\n    flex-wrap: wrap;\n  `\n\n  const Card = styled.div`\n    flex: 0 1 calc(33% - 1rem);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border: 1px solid #eee;\n    padding: 2rem 0;\n\n    @media(max-width: 768px) {\n      flex: 0 1 calc(50% - 1rem);\n    }\n    @media(max-width: 480px) {\n      flex: 0 1 100%;\n    }\n  `\n\n  const CardBody = styled.div`\n    margin-top: 0.5rem;\n  `\n\n  return (\n    <Fragment>\n      <QuestionHeader\n        title=\"Exercício 4\"\n        description=\"Num certo projeto de sua empresa, você foi convocado para criar um\n        layout que seja responsivo e que funcione tanto em computadores\n        com monitores ultra-wide quanto celulares em formato retrato, para\n        desenvolver isso você tem em mãos apenas HTML/CSS e Flexbox.\n        Construa um componente de acordo com a imagem indicada e que\n        seja responsivo para qualquer dispositivo. Uso obrigatório apenas de\n        Flexbox.\"\n      />\n      <CardDeck>\n        <Card>\n          <Avatar>A</Avatar>\n          <CardBody>\n            <strong>Lorem Ipsum</strong>\n            <p>Lorem ipsum</p>\n          </CardBody>\n        </Card>\n        <Card>\n          <Avatar>B</Avatar>\n          <CardBody>\n            <strong>Lorem Ipsum</strong>\n            <p>Lorem ipsum</p>\n          </CardBody>\n        </Card>\n        <Card>\n          <Avatar>C</Avatar>\n          <CardBody>\n            <strong>Lorem Ipsum</strong>\n            <p>Lorem ipsum</p>\n          </CardBody>\n        </Card>\n      </CardDeck>\n\n      <SyntaxHighlighter>\n{`const CardDeck = styled.div\n  display: flex;\n  margin-top: 4rem;\n  flex-wrap: wrap;\n\nconst Card = styled.div\n  flex: 0 1 calc(33% - 1rem);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid #eee;\n  padding: 2rem 0;\n\n  @media(max-width: 768px) {\n    flex: 0 1 calc(50% - 1rem);\n  }\n  @media(max-width: 480px) {\n    flex: 0 1 100%;\n  }\n`}\n      </SyntaxHighlighter>\n    </Fragment>\n  );\n}\n\nexport default Exercicio4Page;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport QuestionHeader from '../layout/QuestionHeader';\n\nconst Exercicio5Page = () => {\n  const Grid = styled.div`\n    display: grid;\n    grid-template-areas: \"main main aside\";\n    grid-template-columns: auto auto 250px;\n  `\n  const Aside = styled.aside`\n    grid-area: aside;\n    background-color: #f44336;\n    padding: 1rem;\n    color: white;\n  `\n\n  const Main = styled.main`\n    grid-area: main;\n    background-color: #2196f3;\n    padding: 1rem;\n  `\n\n  const Article = styled.article`\n    background-color: #e0e0e0;\n    padding: 1rem;\n  `\n\n  return (\n    <Fragment>\n      <QuestionHeader\n        title=\"Exercício 5\"\n        description=\"Observando a imagem abaixo, descreva possíveis soluções para que\n        os elementos “aside” e “article” fiquem alinhados horizontalmente.\"\n      />\n      \n      <Grid>\n        <Main>\n          <Article>\n            <h2>Article 1</h2>\n            <p>Ipsum sit ullamco nulla eu esse. Dolor laboris proident quis voluptate aliqua id officia dolor anim. Ea dolor adipisicing laborum sit non ipsum officia occaecat esse irure Lorem anim cupidatat dolore. Irure minim consectetur deserunt ad. Magna cillum laboris commodo Lorem. Non nisi in aliquip deserunt incididunt consequat ea ut.</p>\n          </Article>\n          <Article>\n            <h2>Article 1</h2>\n            <p>Ipsum sit ullamco nulla eu esse. Dolor laboris proident quis voluptate aliqua id officia dolor anim. Ea dolor adipisicing laborum sit non ipsum officia occaecat esse irure Lorem anim cupidatat dolore. Irure minim consectetur deserunt ad. Magna cillum laboris commodo Lorem. Non nisi in aliquip deserunt incididunt consequat ea ut.</p>\n          </Article>\n        </Main>\n        <Aside>\n          <h2>Aside</h2>\n          <p>Ipsum sit ullamco nulla eu esse. Dolor laboris proident quis voluptate aliqua id officia dolor anim. Ea dolor adipisicing laborum sit non ipsum officia occaecat esse irure Lorem anim cupidatat dolore. Irure minim consectetur deserunt ad. Magna cillum laboris commodo Lorem. Non nisi in aliquip deserunt incididunt consequat ea ut.</p>\n        </Aside>\n      </Grid>\n      <SyntaxHighlighter>\n{`\n  const Grid = styled.div\n    display: grid;\n    grid-template-areas: \"main main aside\";\n    grid-template-columns: auto auto 250px;\n  \n  const Aside = styled.aside\n    grid-area: aside;\n    background-color: #f44336;\n    padding: 1rem;\n    color: white;\n  \n\n  const Main = styled.main\n    grid-area: main;\n    background-color: #2196f3;\n    padding: 1rem;\n  \n\n  const Article = styled.article\n    background-color: #e0e0e0;\n    padding: 1rem;\n`}\n      </SyntaxHighlighter>\n      <SyntaxHighlighter>\n        {`\n<Grid>\n  <Main>\n    <Article>\n      <h2>Article 1</h2>\n      <p>Ipsum sit ullamco nulla eu esse. Dolor laboris proident quis voluptate aliqua id officia dolor anim. Ea dolor adipisicing laborum sit non ipsum officia occaecat esse irure Lorem anim cupidatat dolore. Irure minim consectetur deserunt ad. Magna cillum laboris commodo Lorem. Non nisi in aliquip deserunt incididunt consequat ea ut.</p>\n    </Article>\n    <Article>\n      <h2>Article 1</h2>\n      <p>Ipsum sit ullamco nulla eu esse. Dolor laboris proident quis voluptate aliqua id officia dolor anim. Ea dolor adipisicing laborum sit non ipsum officia occaecat esse irure Lorem anim cupidatat dolore. Irure minim consectetur deserunt ad. Magna cillum laboris commodo Lorem. Non nisi in aliquip deserunt incididunt consequat ea ut.</p>\n    </Article>\n  </Main>\n  <Aside>\n    <h2>Aside</h2>\n    <p>Ipsum sit ullamco nulla eu esse. Dolor laboris proident quis voluptate aliqua id officia dolor anim. Ea dolor adipisicing laborum sit non ipsum officia occaecat esse irure Lorem anim cupidatat dolore. Irure minim consectetur deserunt ad. Magna cillum laboris commodo Lorem. Non nisi in aliquip deserunt incididunt consequat ea ut.</p>\n  </Aside>\n</Grid>\n        `}\n      </SyntaxHighlighter>\n    </Fragment>\n  );\n}\n\nexport default Exercicio5Page;\n","import React, { Fragment } from 'react';\nimport QuestionHeader from '../layout/QuestionHeader';\n\nconst Exercicio6Page = () => {\n  return (\n    <Fragment>\n      <QuestionHeader\n        title=\"Exercício 6\"\n        description=\"Pensando em versionamento de arquivos e GIT, considere a seguinte\n        situação: Uma equipe de desenvolvimento remota foi contratada\n        para fazer algumas atualizações em um grande projeto da sua\n        empresa, adicionando novas funcionalidades e atualizando algumas\n        já existentes. Para que o projeto fonte &quot;funcionasse&quot; externamente,\n        uma configuração precisou ser adicionada em um dos arquivos de\n        configuração do código enviado a essa equipe. Internamente (no\n        ambiente da sua empresa), o sistema também continuou sendo\n        atualizado, também com adição de novas funcionalidades, correção\n        de bugs e atualizações de funcionalidades existentes. Paralelamente\n        ao trabalho da outra equipe. Ao finalizar as atualizações para quais\n        foram contratados, a equipe externa disponibilizou o código-fonte\n        \n        atualizado para a equipe da filial, para que fossem integradas as\n        novas funcionalidades e atualizações. Baseado nos seus\n        conhecimentos de versionamento de arquivos (GIT), descreva os\n        passos para realização do processo citado a cima de forma que o\n        projeto continue funcionando interna e externamente com todas as\n        atualizações feitas até o momento final - integração entre os\n        códigos e arquivos de ambas as equipes.\"\n      />\n      <p>\n        Inicialmente existe um repósitorio com um branch para testes conhecido como <strong>Homologação </strong>\n        onde ambas equipes começam seus projetos e a trabalhar nas novas funcionalidades, correções de bugs e aprimoramento.\n        Para cada um desses aspectos cria-se um branch novo onde o desenvolvedor tanto remoto quando da empresa, começa a trabalhar\n        e faz os testes. Quando ele termina algo novo ele faz um <i>Commit</i> e após finalizar faz o <i>merge request </i>\n        ou <i>pull request</i> que é revisado por alguém e assim volta para o desenvolvedor caso precise\n        fazer alterações ou é adicionado ao ambiente de <strong>Homologação</strong> para novos testes,\n        e então quando tudo estiver correto o que o desenvolvedor trabalhou é adicionado a produção da mesma for que seu branch\n        foi adicionado em homologação. Com isso evita conflitos de trabalhos e código. Caso aconteça utilizam o <i>rebase </i>\n        para correções de conflitos entre códigos.\n      </p>\n    </Fragment>\n  );\n}\n\nexport default Exercicio6Page;\n","import React, { Fragment } from 'react'\nimport QuestionHeader from '../layout/QuestionHeader';\n\nconst Exercicio7Page = () => {\n  return (\n    <Fragment>\n      <QuestionHeader\n        title=\"Exercício 7\"\n        description=\"Defina “Promise” e explique algum caso em que podemos utilizar.\"\n        />\n      <p>\n        Promise é um função asincrona podendo retornar algo a qualquer momento, mesmo depois do component estar carregado.\n        Promises são muito utilizadas para fazer <i>requests</i> da api e para o usuário não ficar esperando em uma \n        tela branca tudo que vem do banco para ele, as promises fazem com que o component carregue e o conteudo vá\n        carregando gradualmente.\n      </p>\n    </Fragment>\n  )\n}\n\nexport default Exercicio7Page\n","import React, { Fragment } from 'react'\nimport QuestionHeader from '../layout/QuestionHeader';\n\nconst Exercicio8Page = () => {\n  return (\n    <Fragment>\n      <QuestionHeader\n        title=\"Exercício 8\"\n        description=\"Imagine que você foi designado para fazer uma tarefa onde o\n        objetivo é mostrar um determinado componente em uma tela do\n        sistema. Esse componente deve ser exibido de formas diferentes em\n        algumas resoluções de tela. Considerando que para tal tarefa você\n        tenha utilizado de recursos mais recentes de CSS3, explique como\n        você testaria essa tela em várias resoluções diferentes e se\n        diferentes browsers e versões renderizariam corretamente o\n        componente.\"\n      />\n      <p>\n        Primeiramente após desenvolver o component e o <code>CSS</code> eu utilizo o devTools para mudar as resoluções\n        e ir conferindo como o component se comporta nas resoluções pré-definidas do browser. Após conferir (e caso precise\n        alterar alguma coisa), eu mudo para meu browser secundário e repito o mesmo processo e por fim vou para browsers\n        com menos suporte como Opera, Internet Explorer e Safari para fazer os ultimos testes desta vez em resolução nativa.\n      </p>\n    </Fragment>\n  )\n}\n\nexport default Exercicio8Page\n","import React, { Fragment } from 'react'\nimport QuestionHeader from '../layout/QuestionHeader';\n\nconst Exercicio9Page = () => {\n  return (\n    <Fragment>\n      <QuestionHeader\n        title=\"Exercício 9\"\n        description=\"Um recurso que auxilia bastante no desenvolvimento front-end são\n        os automatizadores de tarefas (ou Task Runners). Dê um exemplo\n        de um automatizador de tarefas e descreva um breve resumo do que\n        são e para que servem essas ferramentas.\"\n      />\n      <p>\n        Durante minha experiencia com front end nunca utilizei um task runner. Estou feliz em aprender sobre inclusive.\n      </p>\n    </Fragment>\n  )\n}\n\nexport default Exercicio9Page\n","import React, { Fragment } from 'react'\nimport QuestionHeader from '../layout/QuestionHeader';\n\nconst Exercicio10Page = () => {\n  return (\n    <Fragment>\n      <QuestionHeader\n        title=\"Exercício 10\"\n        description=\"Considerando os códigos de status HTTP, defina o significado do\n        retorno de cada um e quando possível dê exemplos práticos dos\n        erros que causariam os retornos para os seguintes códigos: 200,\n        400, 401, 404, 429 e 500.\"\n      />\n      <p>\n        <ul>\n          <li>\n            <strong>200</strong>\n            <p>\n              é o status de quando a requisição deu certo.\n            </p>\n          </li>\n          <li>\n            <strong>400</strong>\n            <p>\n              é o status de quando a requisição não recebeu o que esperava, normalmente quando se faz um metódo não esperado pela api,\n              como um POST em uma api que espera apenas um GET.\n            </p>\n          </li>\n          <li>\n            <strong>401</strong>\n            <p>\n              é o status de quando a requisição não foi autenticada, acontece quando o usúario não está <i>Logado</i> no sistema.\n            </p>\n          </li>\n          <li>\n            <strong>404</strong>\n            <p>\n              é o status de quando a requisição não foi encontrada, costuma acontecer quando é colocado um <i>Endpoint</i> que não existe na api.\n            </p>\n          </li>\n          <li>\n            <strong>429</strong>\n            <p>\n              Após algum tempo trabalhando nunca me ocorreu essa requisição. Fiz uma pesquisa rápida e vi que acontece quando\n              o usuário faz vários <i>Requests</i> ao mesmo tempo. Provavelmnete quando caem em um loop infinito no código que envia\n              várias vezes o mesmo request.\n            </p>\n          </li>\n          <li>\n            <strong>500</strong>\n            <p>\n              é o status para <i>Internal server error</i>. Na minha experiência ocorreu quando havia erros no Backend\n              seja não esperando algum paramêtro enviado ou erros de syntax.\n            </p>\n          </li>\n        </ul>\n      </p>\n    </Fragment>\n  )\n}\n\nexport default Exercicio10Page\n","export const navbarItems = [\n  {\n    id: 1,\n    label: 'Exércicio 1',\n    link: '/exercicio-1',\n  },\n  {\n    id: 2,\n    label: 'Exércicio 2',\n    link: '/exercicio-2',\n  },\n  {\n    id: 3,\n    label: 'Exércicio 3',\n    link: '/exercicio-3',\n  },\n  {\n    id: 4,\n    label: 'Exércicio 4',\n    link: '/exercicio-4',\n  },\n  {\n    id: 5,\n    label: 'Exércicio 5',\n    link: '/exercicio-5',\n  },\n  {\n    id: 6,\n    label: 'Exércicio 6',\n    link: '/exercicio-6',\n  },\n  {\n    id: 7,\n    label: 'Exércicio 7',\n    link: '/exercicio-7',\n  },\n  {\n    id: 8,\n    label: 'Exércicio 8',\n    link: '/exercicio-8',\n  },\n  {\n    id: 9,\n    label: 'Exércicio 9',\n    link: '/exercicio-9',\n  },\n  {\n    id: 10,\n    label: 'Exércicio 10',\n    link: '/exercicio-10',\n  },\n]","import React from 'react';\nimport styled from 'styled-components';\nimport { navbarItems } from '../../consts';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  const Navigation = styled.nav`\n    background: #1976d2;\n    color: white;\n  `\n\n  const NavigationList = styled.ul`\n    list-style: none;\n    display: flex;\n    margin: 0;\n    padding: 1rem;\n    justify-content: space-around;\n  `\n\n  const NavigationItem = styled.li`\n    a {\n      color: white;\n    }\n  `\n\n  return (\n    <Navigation>\n      <NavigationList>\n        {\n          navbarItems.map(navbarItem => (\n            <NavigationItem key={navbarItem.id}><Link to={navbarItem.link}>{navbarItem.label}</Link></NavigationItem>\n          ))\n        }\n      </NavigationList>\n    </Navigation>\n  );\n}\n\nexport default Navbar;\n","import React, { Fragment } from 'react';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport { createGlobalStyle } from 'styled-components';\nimport {\n  Exercicio1Page,\n  Exercicio2Page,\n  Exercicio3Page,\n  Exercicio4Page,\n  Exercicio5Page,\n  Exercicio6Page,\n  Exercicio7Page,\n  Exercicio8Page,\n  Exercicio9Page,\n  Exercicio10Page,\n} from './components/pages';\nimport Navbar from './components/layout/Navbar';\n\nconst App = () => {\n  const GlobalStyles = createGlobalStyle`\n    body {\n      font-family: 'Roboto', sans-serif;\n      margin: 0;\n    }\n    strong {\n      font-weight: 500;\n    }\n    p {\n      margin: 0;\n    }\n  `\n\n  return (\n    <Fragment>\n      <GlobalStyles />\n      <Router>\n        <Navbar />\n        <Container fixed>\n          <Route\n            exact\n            path=\"/exercicio-1\"\n            component={Exercicio1Page}\n          />\n          <Route\n            exact\n            path=\"/exercicio-2\"\n            component={Exercicio2Page}\n          />\n          <Route\n            exact\n            path=\"/exercicio-3\"\n            component={Exercicio3Page}\n          />\n          <Route\n            exact\n            path=\"/exercicio-4\"\n            component={Exercicio4Page}\n          />\n          <Route\n            exact\n            path=\"/exercicio-5\"\n            component={Exercicio5Page}\n          />\n          <Route\n            exact\n            path=\"/exercicio-6\"\n            component={Exercicio6Page}\n          />\n          <Route\n            exact\n            path=\"/exercicio-7\"\n            component={Exercicio7Page}\n          />\n          <Route\n            exact\n            path=\"/exercicio-8\"\n            component={Exercicio8Page}\n          />\n          <Route\n            exact\n            path=\"/exercicio-9\"\n            component={Exercicio9Page}\n          />\n          <Route\n            exact\n            path=\"/exercicio-10\"\n            component={Exercicio10Page}\n          />\n        </Container>\n      </Router>\n    </Fragment>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}